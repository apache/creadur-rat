<?xml version='1.0'?>
<!--

 Licensed to the Apache Software Foundation (ASF) under one   *
 or more contributor license agreements.  See the NOTICE file *
 distributed with this work for additional information        *
 regarding copyright ownership.  The ASF licenses this file   *
 to you under the Apache License, Version 2.0 (the            *
 "License"); you may not use this file except in compliance   *
 with the License.  You may obtain a copy of the License at   *
                                                              *
   http://www.apache.org/licenses/LICENSE-2.0                 *
                                                              *
 Unless required by applicable law or agreed to in writing,   *
 software distributed under the License is distributed on an  *
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY       *
 KIND, either express or implied.  See the License for the    *
 specific language governing permissions and limitations      *
 under the License.                                           *

-->

<project default="all"
	xmlns:au="antlib:org.apache.ant.antunit"
	xmlns:rat="antlib:org.apache.rat.anttasks">

	<taskdef uri="antlib:org.apache.ant.antunit"
		resource="org/apache/ant/antunit/antlib.xml"
		classpath="${test.classpath}" />

	<taskdef uri="antlib:org.apache.rat.anttasks"
		resource="org/apache/rat/anttasks/antlib.xml"
		classpath="${test.classpath}" />

	<typedef name="matcher" classname="org.example.Matcher"
		classpath="${test.classpath}" />

	<typedef name="matcherBuilder" classname="org.example.MatcherBuilder"
		classpath="${test.classpath}" />

	<pathconvert dirsep="/" property="file.name">
		<path>
			<pathelement location="${ant.file}" />
		</path>
	</pathconvert>

	<property name="File">${ant.file}</property>
	<property name="Integer">5</property>
	<property name="String">hello</property>
	<property name="StandardCollection">GIT</property>

	<target name="testWithReportSentToAnt">
		<rat:report>
			<file file="${ant.file}" />
		</rat:report>
	</target>

	<target name="all" />
	
	<target name="testDefault">
		<rat:report />
	</target>
	
	<target name="testWithReportSentToFile">
		<property name="report.file" location="${output.dir}/selftest.report" />
		<rat:report reportFile="${report.file}">
			<file file="${ant.file}" />
		</rat:report>
	</target>

	<target name="testWithALUnknown">
		<rat:report useDefaultLicenses="false">
			<rat:family id='YASL1' name='Yet Another Software License (YASL) 1.0'/>
			<rat:license
				family="YASL1"
				notes="Interesting License">
				<rat:copyright start="2023" end="2024" owner="public domain" />
			</rat:license>
			<file file="${ant.file}" />
		</rat:report>
	</target>

	<target name="testCustomLicense">
		<property name="license.file"
			location="${resource.dir}/customLicense.xml" />
		<rat:report licenses="${license.file}" useDefaultLicenses="false">
			<file file="${ant.file}" />
		</rat:report>
	</target>

	<target name="testInlineCustomMatcher" depends="prepareCustomMatcher">
		<rat:report useDefaultLicenses="false">
			<rat:family id='YASL1' name='Yet Another Software License (YASL) 1.0'/>
			<rat:license
				family="YASL1"
				notes="Interesting License">
				<inlineMatcher />
			</rat:license>
			<file file="${ant.file}" />
		</rat:report>
	</target>

	<target name="testCustomMatcher">
		<rat:report useDefaultLicenses="false">
			<rat:family id='YASL1' name='Yet Another Software License (YASL) 1.0'/>
			<rat:license
				family="YASL1"
				notes="Interesting License">
				<matcher />
			</rat:license>
			<file file="${ant.file}" />
		</rat:report>
	</target>

	<target name="testCustomMatcherBuilder">
		<rat:report useDefaultLicenses="false">
			<rat:family id='YASL1' name='Yet Another Software License (YASL) 1.0'/>
			<rat:license
				family="YASL1"
				notes="Interesting License">
				<matcherBuilder />
			</rat:license>
			<file file="${ant.file}" />
		</rat:report>
	</target>

	<target name="testNoResources">
		<rat:report />
	</target>

	<target name="testNoLicenseMatchers">
		<rat:report useDefaultLicenses="false">
			<file file="${ant.file}" />
		</rat:report>
	</target>

	<target name="testAddLicenseHeaders">
		<delete dir="${output.dir}/it-sources" />
		<mkdir dir="${output.dir}/it-sources" />
		<copy file="${resource.dir}/index.apt"
			tofile="${output.dir}/it-sources/index.apt" />
		<rat:report addLicenseHeaders="true">
			<file file="${output.dir}/it-sources/index.apt" />
		</rat:report>
	</target>

	<target name="testISO88591">
		<rat:report format="xml">
			<file file="src/test/resources/org/example/iso-8859-1.html" />
		</rat:report>
	</target>

	<target name="testISO88591WithReportFile">
		<property name="report.file" location="${output.dir}/selftest.report" />
		<rat:report reportFile="${report.file}" format="xml">
			<file file="src/test/resources/org/example/iso-8859-1.html" />
		</rat:report>
	</target>

	<target name="testCopyrightBuild">
		<rat:report>
			<file file="${resource.dir}/index.apt" />
			<rat:family id='YASL1' name='Yet Another Software License (YASL) 1.0'/>
			<rat:license
				family="YASL1"
				notes="Interesting License">
				<rat:copyright start="2023" end="2024" owner="public domain" />
			</rat:license>
		</rat:report>
	</target>

	<target name="prepareCustomMatcher">
		<mkdir dir="${output.dir}/test-classes" />
		<mkdir dir="${output.dir}/src/org/example" />
		<echo file="${output.dir}/src/org/example/InlineMatcher.java"><![CDATA[
package org.example;

import org.apache.rat.analysis.matchers.AbstractHeaderMatcher;
import org.apache.rat.analysis.IHeaders;

public class InlineMatcher extends AbstractHeaderMatcher {
    public InlineMatcher() {
        super("InlineMatcher");
    }

    @Override
    public boolean matches(IHeaders headers) {
        return true;
    }
}
]]></echo>

		<javac srcdir="${output.dir}/src"
			destdir="${output.dir}/../test-classes"
			classpath="${test.classpath}" fork="true" />
		<typedef name="inlineMatcher" classname="org.example.InlineMatcher" />
	</target>

	<!-- complete list of Report option tests -->

	<target name="setReportFile">
		<rat:report reportFile="${output.dir}/reportFile.txt">
		</rat:report>
	</target>

	<target name="addLicense">
		<rat:report>
			<rat:license
					family="YASL1"
					notes="Interesting License">
				<rat:copyright start="2023" end="2024" owner="public domain" />
			</rat:license>
		</rat:report>
	</target>

	<target name="addFamily">
		<rat:report>
			<rat:family
					id="YASL1"
					name="yet another silly license">
			</rat:family>
		</rat:report>
	</target>

	<target name="addStylesheet">
		<file file="${ant.file}"/>
		<rat:report>
			<rat:stylesheet>
				<file file="${ant.file}"/>
			</rat:stylesheet>
		</rat:report>
	</target>

	<target name="addStyleSheet">
		<file file="${ant.file}"/>
		<rat:report>
			<rat:stylesheet>
				<file file="${ant.file}"/>
			</rat:stylesheet>
		</rat:report>
	</target>

<!--	/usr/lib/jvm/java-1.21.0-openjdk-amd64/bin/java -javaagent:/home/claude/bin/idea-IU-241.14494.240/lib/idea_rt.jar=46735:/home/claude/bin/idea-IU-241.14494.240/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath /home/claude/apache/creadur-rat/apache-rat-tools/target/classes:/home/claude/apache/creadur-rat/apache-rat-core/target/classes:/home/claude/.m2/repository/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar:/home/claude/.m2/repository/org/apache/commons/commons-lang3/3.17.0/commons-lang3-3.17.0.jar:/home/claude/.m2/repository/commons-io/commons-io/2.18.0/commons-io-2.18.0.jar:/home/claude/.m2/repository/org/apache/commons/commons-text/1.13.0/commons-text-1.13.0.jar:/home/claude/.m2/repository/org/apache/tika/tika-core/2.9.2/tika-core-2.9.2.jar:/home/claude/.m2/repository/org/slf4j/slf4j-api/2.0.10/slf4j-api-2.0.10.jar:/home/claude/.m2/repository/org/apache/tika/tika-parser-text-module/2.9.2/tika-parser-text-module-2.9.2.jar:/home/claude/.m2/repository/com/github/albfernandez/juniversalchardet/2.4.0/juniversalchardet-2.4.0.jar:/home/claude/.m2/repository/commons-cli/commons-cli/1.8.0/commons-cli-1.8.0.jar:/home/claude/.m2/repository/org/apache/commons/commons-csv/1.13.0/commons-csv-1.13.0.jar:/home/claude/.m2/repository/commons-codec/commons-codec/1.17.2/commons-codec-1.17.2.jar:/home/claude/.m2/repository/org/apache/commons/commons-compress/1.27.1/commons-compress-1.27.1.jar org.apache.rat.tools.AntTestGenerator -->
	<target name='copyrightAttribute'>
		<rat:report copyright='${String}' />
	</target>

	<target name='editCopyrightAttribute'>
		<rat:report editCopyright='${String}' />
	</target>

	<target name='forceAttribute'>
		<rat:report force='true' />
	</target>

	<target name='editOverwriteAttribute'>
		<rat:report editOverwrite='true' />
	</target>

	<target name='addLicenseAttribute'>
		<rat:report addLicense='true' />
	</target>

	<target name='editLicenseAttribute'>
		<rat:report editLicense='true' />
	</target>

	<target name='configElement'>
		<rat:report>
			<config>${File}</config>
		</rat:report>
	</target>

	<target name='licensesElement'>
		<rat:report>
			<licenses>${File}</licenses>
		</rat:report>
	</target>

	<target name='configurationNoDefaultsAttribute'>
		<rat:report configurationNoDefaults='true' />
	</target>

	<target name='noDefaultLicensesAttribute'>
		<rat:report noDefaultLicenses='true' />
	</target>

	<target name='licensesApprovedElement'>
		<rat:report>
			<licensesApproved>${String}</licensesApproved>
		</rat:report>
	</target>

	<target name='licensesApprovedFileAttribute'>
		<rat:report licensesApprovedFile='${File}' />
	</target>

	<target name='licensesApprovedFileElement'>
		<rat:report>
			<licensesApprovedFile>${File}</licensesApprovedFile>
		</rat:report>
	</target>

	<target name='licenseFamiliesApprovedElement'>
		<rat:report>
			<licenseFamiliesApproved>${String}</licenseFamiliesApproved>
		</rat:report>
	</target>

	<target name='licenseFamiliesApprovedFileAttribute'>
		<rat:report licenseFamiliesApprovedFile='${File}' />
	</target>

	<target name='licenseFamiliesApprovedFileElement'>
		<rat:report>
			<licenseFamiliesApprovedFile>${File}</licenseFamiliesApprovedFile>
		</rat:report>
	</target>

	<target name='licensesDeniedElement'>
		<rat:report>
			<licensesDenied>${String}</licensesDenied>
		</rat:report>
	</target>

	<target name='licensesDeniedFileAttribute'>
		<rat:report licensesDeniedFile='${File}' />
	</target>

	<target name='licensesDeniedFileElement'>
		<rat:report>
			<licensesDeniedFile>${File}</licensesDeniedFile>
		</rat:report>
	</target>

	<target name='licenseFamiliesDeniedElement'>
		<rat:report>
			<licenseFamiliesDenied>${String}</licenseFamiliesDenied>
		</rat:report>
	</target>

	<target name='licenseFamiliesDeniedFileAttribute'>
		<rat:report licenseFamiliesDeniedFile='${File}' />
	</target>

	<target name='licenseFamiliesDeniedFileElement'>
		<rat:report>
			<licenseFamiliesDeniedFile>${File}</licenseFamiliesDeniedFile>
		</rat:report>
	</target>

	<target name='counterMaxElement'>
		<rat:report>
			<counterMax>${Pair}</counterMax>
		</rat:report>
	</target>

	<target name='counterMinElement'>
		<rat:report>
			<counterMin>${Pair}</counterMin>
		</rat:report>
	</target>

	<target name='inputSourceElement'>
		<rat:report>
			<inputSource>${File}</inputSource>
		</rat:report>
	</target>

	<target name='excludeElement'>
		<rat:report>
			<exclude>${String}</exclude>
		</rat:report>
	</target>

	<target name='inputExcludeElement'>
		<rat:report>
			<inputExclude>${String}</inputExclude>
		</rat:report>
	</target>

	<target name='excludeFileAttribute'>
		<rat:report excludeFile='${File}' />
	</target>

	<target name='excludeFileElement'>
		<rat:report>
			<excludeFile>${File}</excludeFile>
		</rat:report>
	</target>

	<target name='inputExcludeFileAttribute'>
		<rat:report inputExcludeFile='${File}' />
	</target>

	<target name='inputExcludeFileElement'>
		<rat:report>
			<inputExcludeFile>${File}</inputExcludeFile>
		</rat:report>
	</target>

	<target name='inputExcludeStdElement'>
		<rat:report>
			<inputExcludeStd>${String}</inputExcludeStd>
		</rat:report>
	</target>

	<target name='inputExcludeSizeAttribute'>
		<rat:report inputExcludeSize='${Integer}' />
	</target>

	<target name='inputExcludeSizeElement'>
		<rat:report>
			<inputExcludeSize>${Integer}</inputExcludeSize>
		</rat:report>
	</target>

	<target name='inputIncludeElement'>
		<rat:report>
			<inputInclude>${String}</inputInclude>
		</rat:report>
	</target>

	<target name='includeElement'>
		<rat:report>
			<include>${String}</include>
		</rat:report>
	</target>

	<target name='inputIncludeFileAttribute'>
		<rat:report inputIncludeFile='${File}' />
	</target>

	<target name='inputIncludeFileElement'>
		<rat:report>
			<inputIncludeFile>${File}</inputIncludeFile>
		</rat:report>
	</target>

	<target name='includesFileAttribute'>
		<rat:report includesFile='${File}' />
	</target>

	<target name='includesFileElement'>
		<rat:report>
			<includesFile>${File}</includesFile>
		</rat:report>
	</target>

	<target name='inputIncludeStdElement'>
		<rat:report>
			<inputIncludeStd>${String}</inputIncludeStd>
		</rat:report>
	</target>

	<target name='scanHiddenDirectoriesAttribute'>
		<rat:report scanHiddenDirectories='true' />
	</target>

	<target name='inputExcludeParsedScmElement'>
		<rat:report>
			<inputExcludeParsedScm>${StandardCollection}</inputExcludeParsedScm>
		</rat:report>
	</target>

	<target name='outputStyleAttribute'>
		<rat:report outputStyle='${String}' />
	</target>

	<target name='stylesheetAttribute'>
		<rat:report stylesheet='${String}' />
	</target>

	<target name='xmlAttribute'>
		<rat:report xml='true' />
	</target>

	<target name='outputLicensesAttribute'>
		<rat:report outputLicenses='${String}' />
	</target>

	<target name='listLicensesAttribute'>
		<rat:report listLicenses='${String}' />
	</target>

	<target name='outputFamiliesAttribute'>
		<rat:report outputFamilies='${String}' />
	</target>

	<target name='listFamiliesAttribute'>
		<rat:report listFamilies='${String}' />
	</target>

	<target name='dryRunAttribute'>
		<rat:report dryRun='true' />
	</target>

	<target name='outAttribute'>
		<rat:report out='${File}' />
	</target>

	<target name='outElement'>
		<rat:report>
			<out>${File}</out>
		</rat:report>
	</target>

	<target name='outputFileAttribute'>
		<rat:report outputFile='${File}' />
	</target>

	<target name='outputFileElement'>
		<rat:report>
			<outputFile>${File}</outputFile>
		</rat:report>
	</target>

	<target name='outputArchiveAttribute'>
		<rat:report outputArchive='${String}' />
	</target>

	<target name='outputStandardAttribute'>
		<rat:report outputStandard='${String}' />
	</target>

	<target name='helpLicensesAttribute'>
		<rat:report helpLicenses='true' />
	</target>

<!--	Process finished with exit code 0 -->
</project>
