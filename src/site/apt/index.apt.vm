~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~~   Licensed to the Apache Software Foundation (ASF) under one or more
~~   contributor license agreements.  See the NOTICE file distributed with
~~   this work for additional information regarding copyright ownership.
~~   The ASF licenses this file to You under the Apache License, Version 2.0
~~   (the "License"); you may not use this file except in compliance with
~~   the License.  You may obtain a copy of the License at
~~
~~       http://www.apache.org/licenses/LICENSE-2.0
~~
~~   Unless required by applicable law or agreed to in writing, software
~~   distributed under the License is distributed on an "AS IS" BASIS,
~~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~   See the License for the specific language governing permissions and
~~   limitations under the License.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                   --------------------------
                   A Release Audit Tool
                   --------------------------

A Release Audit Tool (RAT)

 Apache RAT&#8482; audits software distributions, with a special interest in headers.
 If this isn't quite what you're looking for then take a look at the
 other products developed by {{{https://creadur.apache.org}Apache Creadur}}&#8482;,
 including {{{https://creadur.apache.org/whisker}Apache Whisker}}&#8482; which audits
 and generates legal (for example <<<LICENSE>>>) documents for
 complex software distributions.

 There are several things to keep in mind when running RAT

 [[1]] RAT highlights possible issues.

 [[2]] RAT reports require interpretation.

 [[3]] RAT often requires some tuning before it runs well against a project.

 [[4]] RAT relies on heuristics: it may miss issues


Apache RAT&#8482;

 In a hurry? Jump to {{{Quick_Start:_Running_RAT}quick start}}

%{toc|fromDepth=2|toDepth=3}

* About RAT

** What Is RAT?

 Apache RAT is a release audit tool, focused on licenses.

 Use RAT to improve accuracy and efficiency
 when checking releases for licenses.

 Reviewing releases in the {{{https://incubator.apache.org/}Apache Incubator}}
 by hand was error-prone and time-consuming.
 RAT arises from the Apache style, but is used more widely.

 Apache RAT is part of the {{{https://creadur.apache.org}Apache Creadur}}
 language- and build-agnostic suite of tools for auditing and comprehending
 software distributions. Our community develops
 {{{https://opensource.org/} open source software}} the
 {{{https://www.apache.org/foundation/how-it-works.html} Apache way}}.

 Please feel free to contribute a
 {{{./issue-management.html}patch}},
 {{{https://wiki.c2.com/?TestDrivenDevelopment}demonstrate}} a
 {{{./issue-management.html}bug}}, or
 just
 {{{./mailing-lists.html}talk to us}}.
 All welcome :-)

** How Do I Use RAT?

 Apache RAT ${project.version} ships with

   * A {{{./apache-rat/index.html}command line}} client.

   * An Apache {{{./apache-rat-task/index.html}Ant task library}} ,

   * An Apache {{{./apache-rat-plugin/index.html}Maven plugin}}.

 RAT is extensible. If your build tool isn't supported, please contribute a
 {{{./issue-management.html}patch}} or
 {{{./mailing-lists.html}talk to us}}.

 RAT aspires to be self documenting. Please contribute a
 {{{./issue-management.html}patch}} or
 {{{./mailing-lists.html}talk to us}}
 whenever RAT falls short.

** How do I extend RAT

 There are several standard ways to extend RAT.

   * Add a {{{./license_def.html}license definition}} via an XML file.

   * Add a new {{{./matcher_def.html}Matcher definition}}. Requires Java expertise.

   * Add a new definition format. Requires Java expertise as well as expertise with the format.

   * Write a new {{{./xslt_def.html}output report}}. Requires XSLT knowledge.

   * Write a new {{{./ui_def.html}user interface}}. Requires Java expertise, but there are tools to help.

* Quick Start: Running RAT

  There are three user interfaces for RAT: from the {{{./apache-rat/index.html}command line}},
  from {{{./apache-rat-task/index.html}Ant}}, and from {{{./apache-rat-plugin/index.html}Maven}}.

  Please see the specific documentation in one of the links above.

* Building RAT from source

** Checkout the code

  RAT uses a Git repository. You can clone it using:

+------------------------------------------+
git clone https://gitbox.apache.org/repos/asf/creadur-rat.git
+------------------------------------------+

 For more information about how to access our repository please read our {{{./scm.html}source code management}} documentation.

** Building RAT

 Build RAT with {{{https://maven.apache.org/}Apache Maven}} preferably version ${mavenVersion} or later.

 There are two methods for building the RAT suite:

+------------------------------------------+
cd creadur-rat
mvn clean install
+------------------------------------------+

 or with the included Maven wrapper

+------------------------------------------+
cd creadur-rat
./mvnw
+------------------------------------------+

*** Hints and Tips

 The project creates several jars that are used later in the build process. This means that the jars for the version being build should be accessible or a error concerning a missing jar will be displayed. There are several ways to avoid this problem.
 
 1. Include the Apache snapshot repository (https://repository.apache.org/content/repositories/snapshots<url>https://repository.apache.org/content/repositories/snapshots) in your Maven build.
 
 2. Execute the maven install noted above. This will place the current jars in your local repository.
 
 3. Run "mvn package" and use the resulting jar in the apache-rat sub-module for testing.
 
  If you modify code in one sub-module you need to run "mvn install" in that module to get it into your repository so that you can use it in later repository builds. Alternatively, you can run "mvn package", or "mvn install" on the entire project.
  
